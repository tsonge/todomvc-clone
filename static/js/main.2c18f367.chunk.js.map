{"version":3,"sources":["index.js"],"names":["App","props","state","todos","text","completed","val","this","setState","ind","_cloneDeep","filter","todo","i","Fragment","className","Inputt","update","TodoList","updateCompleted","deleteTodo","React","Component","handleKeyDown","e","key","target","value","placeholder","onKeyDown","map","htmlId","nextId","type","id","onChange","htmlFor","style","textDecorationColor","onClick","ReactDOM","render","document","getElementById"],"mappings":"iRAOMA,E,YACJ,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACXC,MAAO,CACL,CACEC,KAAM,YACNC,WAAW,GAEb,CACED,KAAM,gBACNC,WAAW,GAEb,CACED,KAAM,eACNC,WAAW,KAdD,E,oEAoBXC,GACLC,KAAKC,SAAS,CACZL,MAAM,GAAD,mBAAMI,KAAKL,MAAMC,OAAjB,CAAwB,CAACC,KAAME,EAAKD,WAAU,S,sCAIvCI,GAEd,IAAIN,EAAQO,IAAWH,KAAKL,MAAMC,OAElCA,EAAMM,GAAO,CAACL,KAAMD,EAAMM,GAAKL,KAAMC,WAAYF,EAAMM,GAAKJ,WAE5DE,KAAKC,SAAS,CACZL,Y,iCAIOM,GACT,IAAIN,EAAQO,IAAWH,KAAKL,MAAMC,OAElCA,EAAQA,EAAMQ,QAAO,SAACC,EAAKC,GAAN,OAAaA,IAAMJ,KAExCF,KAAKC,SAAS,CACZL,Y,+BAIM,IAAD,OACP,OACE,kBAAC,IAAMW,SAAP,KACA,qCACA,yBAAKC,UAAU,mBACb,kBAACC,EAAD,CAAQC,OAAQ,SAACX,GAAD,OAAS,EAAKW,OAAOX,MACrC,kBAACY,EAAD,CAAUf,MAAOI,KAAKL,MAAMC,MAClBgB,gBAAiB,SAACN,GAAD,OAAO,EAAKM,gBAAgBN,IAC7CO,WAAY,SAACP,GAAD,OAAO,EAAKO,WAAWP,Y,GAxDnCQ,IAAMC,WAgElBN,E,2MAEJO,cAAgB,SAACC,GACD,UAAVA,EAAEC,MACJ,EAAKxB,MAAMgB,OAAOO,EAAEE,OAAOC,OAC3BH,EAAEE,OAAOC,MAAQ,K,wEAKnB,OACE,2BAAOZ,UAAU,SAASa,YAAY,0BAA0BC,UAAWtB,KAAKgB,oB,GAXjEF,IAAMC,WAgBrBJ,E,iLAEM,IAAD,OAEP,OACE,kBAAC,IAAMJ,SAAP,KACCP,KAAKN,MAAME,MAAM2B,KAAI,SAAClB,EAAMH,GAE3B,IAAMsB,EAASC,MAEf,OACE,kBAAC,IAAMlB,SAAP,CAAgBW,IAAKhB,GAErB,yBAAKM,UAAU,YACf,2BAAOkB,KAAK,WAAWC,GAAIH,EAAQI,SAAU,kBAAM,EAAKlC,MAAMkB,gBAAgBV,MAC9E,2BAAO2B,QAASL,KAIhB,yBAAKhB,UAAU,OAAOsB,MAAOzB,EAAKP,UAAY,CAACiC,oBAAqB,SAAW,IAAM1B,EAAKR,MAE1F,yBAAKW,UAAU,kBAAkBwB,QAAS,kBAAM,EAAKtC,MAAMmB,WAAWX,KACpE,yBAAKM,UAAU,UACf,yBAAKA,UAAU,WAGjB,sC,GA1BaM,IAAMC,WAsC7BkB,IAASC,OAAO,kBAACzC,EAAD,MAAS0C,SAASC,eAAe,U","file":"static/js/main.2c18f367.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylee.css';\nimport nextId from 'react-id-generator';\nimport _cloneDeep from 'lodash.clonedeep';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todos: [\n        {\n          text: 'Go to gym',\n          completed: false,\n        },\n        {\n          text: 'Buy groceries',\n          completed: false,\n        },\n        {\n          text: 'Walk the dog',\n          completed: false,\n        },\n      ],\n    };\n  }\n\n  update(val) {\n    this.setState({\n      todos: [...this.state.todos, {text: val, completed:false}],\n    });\n  }\n\n  updateCompleted(ind) {\n\n    let todos = _cloneDeep(this.state.todos);\n\n    todos[ind] = {text: todos[ind].text, completed: !todos[ind].completed};\n\n    this.setState({\n      todos\n    });\n  }\n\n  deleteTodo(ind) {\n    let todos = _cloneDeep(this.state.todos);\n\n    todos = todos.filter((todo,i) => (i !== ind));\n\n    this.setState({\n      todos\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <h1>todos</h1>\n      <div className=\"maintodocontent\">\n        <Inputt update={(val) => this.update(val)}/>\n        <TodoList todos={this.state.todos} \n                  updateCompleted={(i) => this.updateCompleted(i)} \n                  deleteTodo={(i) => this.deleteTodo(i)}\n        />\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Inputt extends React.Component {\n\n  handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.props.update(e.target.value);\n      e.target.value = '';\n    }\n  }\n\n  render() {\n    return (\n      <input className=\"inputt\" placeholder=\"What need's to be done?\" onKeyDown={this.handleKeyDown} />\n    );\n  }\n}\n\nclass TodoList extends React.Component {\n  \n  render() {\n\n    return (\n      <React.Fragment>\n      {this.props.todos.map((todo, ind) => {\n        \n        const htmlId = nextId();\n\n        return (\n          <React.Fragment key={ind}>\n\n          <div className=\"checkbox\">\n          <input type=\"checkbox\" id={htmlId} onChange={() => this.props.updateCompleted(ind)}/>\n          <label htmlFor={htmlId}></label>\n          </div>\n\n\n          <div className=\"todo\" style={todo.completed ? {textDecorationColor: 'black'} : {} }>{todo.text}</div>\n          \n          <div className=\"delete-todo-btn\" onClick={() => this.props.deleteTodo(ind)}>\n            <div className=\"cbar1\"></div>\n            <div className=\"cbar2\"></div>\n          </div>\n\n          <hr />\n          </React.Fragment>\n        );\n\n      })}\n      </React.Fragment>\n    );\n  }\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}